// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CONST A = - 1 1`] = `
"digraph graph1 {
0[label="Program"];
0 -> 1[label="blocks[0]"];
1[label="ConstantBlock"];
1 -> 2[label="defs[0]"];
2[label="ConstantDefinition"];
3[label="A"];
2 -> 3[label="ident"];
2 -> 4[label="constant"];
4[label="SignedConstant"];
5[label="-"];
4 -> 5[label="sign"];
4 -> 6[label="value"];
6[label="UnsignedConstant"];
7[label="1"];
6 -> 7[label="value"];
}
"
`;

exports[`CONST A = - 1; B = + 5 1`] = `
"digraph graph1 {
0[label="Program"];
0 -> 1[label="blocks[0]"];
1[label="ConstantBlock"];
1 -> 2[label="defs[0]"];
2[label="ConstantDefinition"];
3[label="A"];
2 -> 3[label="ident"];
2 -> 4[label="constant"];
4[label="SignedConstant"];
5[label="-"];
4 -> 5[label="sign"];
4 -> 6[label="value"];
6[label="UnsignedConstant"];
7[label="1"];
6 -> 7[label="value"];
1 -> 8[label="defs[1]"];
8[label="ConstantDefinition"];
9[label="B"];
8 -> 9[label="ident"];
8 -> 10[label="constant"];
10[label="SignedConstant"];
11[label="+"];
10 -> 11[label="sign"];
10 -> 12[label="value"];
12[label="UnsignedConstant"];
13[label="5"];
12 -> 13[label="value"];
}
"
`;

exports[`CONST a = 1; CONST b = 1e5 1`] = `
"digraph graph1 {
0[label="Program"];
0 -> 1[label="blocks[0]"];
1[label="ConstantBlock"];
1 -> 2[label="defs[0]"];
2[label="ConstantDefinition"];
3[label="a"];
2 -> 3[label="ident"];
2 -> 4[label="constant"];
4[label="UnsignedConstant"];
5[label="1"];
4 -> 5[label="value"];
0 -> 6[label="blocks[1]"];
6[label="ConstantBlock"];
6 -> 7[label="defs[0]"];
7[label="ConstantDefinition"];
8[label="b"];
7 -> 8[label="ident"];
7 -> 9[label="constant"];
9[label="UnsignedConstant"];
10[label="1e5"];
9 -> 10[label="value"];
}
"
`;

exports[`CONST a = 1;;; 1`] = `
"digraph graph1 {
0[label="Program"];
0 -> 1[label="blocks[0]"];
1[label="ConstantBlock"];
1 -> 2[label="defs[0]"];
2[label="ConstantDefinition"];
3[label="a"];
2 -> 3[label="ident"];
2 -> 4[label="constant"];
4[label="UnsignedConstant"];
5[label="1"];
4 -> 5[label="value"];
}
"
`;

exports[`CONST a = 1;;;TYPE t = (a,b,c,d);;; 1`] = `
"digraph graph1 {
0[label="Program"];
0 -> 1[label="blocks[0]"];
1[label="ConstantBlock"];
1 -> 2[label="defs[0]"];
2[label="ConstantDefinition"];
3[label="a"];
2 -> 3[label="ident"];
2 -> 4[label="constant"];
4[label="UnsignedConstant"];
5[label="1"];
4 -> 5[label="value"];
0 -> 6[label="blocks[1]"];
6[label="TypeBlock"];
6 -> 7[label="defs[0]"];
7[label="TypeDefinition"];
8[label="t"];
7 -> 8[label="ident"];
7 -> 9[label="type"];
9[label="ScalarType"];
10[label="a"];
9 -> 10[label="types[0]"];
11[label="b"];
9 -> 11[label="types[1]"];
12[label="c"];
9 -> 12[label="types[2]"];
13[label="d"];
9 -> 13[label="types[3]"];
}
"
`;

exports[`Cпециальные значения распознаются корректно 1`] = `"NIL (1,1): NIL"`;

exports[`Cпециальные значения распознаются корректно 2`] = `"PACKED (1,5): PACKED"`;

exports[`Cпециальные значения распознаются корректно 3`] = `"OF (1,12): OF"`;

exports[`Cпециальные значения распознаются корректно 4`] = `"ARRAY (1,15): ARRAY"`;

exports[`Cпециальные значения распознаются корректно 5`] = `"FILE (1,21): FILE"`;

exports[`Cпециальные значения распознаются корректно 6`] = `"SET (1,26): SET"`;

exports[`Cпециальные значения распознаются корректно 7`] = `"RECORD (1,30): RECORD"`;

exports[`Cпециальные значения распознаются корректно 8`] = `"END (1,37): END"`;

exports[`Cпециальные значения распознаются корректно 9`] = `"TYPE (1,41): TYPE"`;

exports[`Cпециальные значения распознаются корректно 10`] = `"VAR (1,46): VAR"`;

exports[`Cпециальные значения распознаются корректно 11`] = `"CASE (1,50): CASE"`;

exports[`Cпециальные значения распознаются корректно 12`] = `"CONST (1,55): CONST"`;

exports[`TYPE t = (a,b,c,d);;;; 1`] = `
"digraph graph1 {
0[label="Program"];
0 -> 1[label="blocks[0]"];
1[label="TypeBlock"];
1 -> 2[label="defs[0]"];
2[label="TypeDefinition"];
3[label="t"];
2 -> 3[label="ident"];
2 -> 4[label="type"];
4[label="ScalarType"];
5[label="a"];
4 -> 5[label="types[0]"];
6[label="b"];
4 -> 6[label="types[1]"];
7[label="c"];
4 -> 7[label="types[2]"];
8[label="d"];
4 -> 8[label="types[3]"];
}
"
`;

exports[`TYPE t = ^a 1`] = `
"digraph graph1 {
0[label="Program"];
0 -> 1[label="blocks[0]"];
1[label="TypeBlock"];
1 -> 2[label="defs[0]"];
2[label="TypeDefinition"];
3[label="t"];
2 -> 3[label="ident"];
2 -> 4[label="type"];
4[label="PointerType"];
5[label="a"];
4 -> 5[label="value"];
}
"
`;

exports[`TYPE t = -1..{dsadasd}4 1`] = `
"digraph graph1 {
0[label="Program"];
0 -> 1[label="blocks[0]"];
1[label="TypeBlock"];
1 -> 2[label="defs[0]"];
2[label="TypeDefinition"];
3[label="t"];
2 -> 3[label="ident"];
2 -> 4[label="type"];
4[label="SubrangeType"];
4 -> 5[label="start"];
5[label="SignedConstant"];
6[label="-"];
5 -> 6[label="sign"];
5 -> 7[label="value"];
7[label="UnsignedConstant"];
8[label="1"];
7 -> 8[label="value"];
4 -> 9[label="end"];
9[label="UnsignedConstant"];
10[label="4"];
9 -> 10[label="value"];
}
"
`;

exports[`TYPE t = ARRAY [a,b,c] OF m 1`] = `
"digraph graph1 {
0[label="Program"];
0 -> 1[label="blocks[0]"];
1[label="TypeBlock"];
1 -> 2[label="defs[0]"];
2[label="TypeDefinition"];
3[label="t"];
2 -> 3[label="ident"];
2 -> 4[label="type"];
4[label="StructuredType"];
4 -> 5[label="packed"];
5[label="false"];
4 -> 6[label="type"];
6[label="ArrayType"];
7[label="a"];
6 -> 7[label="index_types[0]"];
8[label="b"];
6 -> 8[label="index_types[1]"];
9[label="c"];
6 -> 9[label="index_types[2]"];
10[label="m"];
6 -> 10[label="component_type"];
}
"
`;

exports[`TYPE t = FILE OF ARRAY [b,c] OF m 1`] = `
"digraph graph1 {
0[label="Program"];
0 -> 1[label="blocks[0]"];
1[label="TypeBlock"];
1 -> 2[label="defs[0]"];
2[label="TypeDefinition"];
3[label="t"];
2 -> 3[label="ident"];
2 -> 4[label="type"];
4[label="StructuredType"];
4 -> 5[label="packed"];
5[label="false"];
4 -> 6[label="type"];
6[label="FileType"];
6 -> 7[label="type"];
7[label="StructuredType"];
7 -> 8[label="packed"];
8[label="false"];
7 -> 9[label="type"];
9[label="ArrayType"];
10[label="b"];
9 -> 10[label="index_types[0]"];
11[label="c"];
9 -> 11[label="index_types[1]"];
12[label="m"];
9 -> 12[label="component_type"];
}
"
`;

exports[`TYPE t = FILE OF FILE OF FILE OF t 1`] = `
"digraph graph1 {
0[label="Program"];
0 -> 1[label="blocks[0]"];
1[label="TypeBlock"];
1 -> 2[label="defs[0]"];
2[label="TypeDefinition"];
3[label="t"];
2 -> 3[label="ident"];
2 -> 4[label="type"];
4[label="StructuredType"];
4 -> 5[label="packed"];
5[label="false"];
4 -> 6[label="type"];
6[label="FileType"];
6 -> 7[label="type"];
7[label="StructuredType"];
7 -> 8[label="packed"];
8[label="false"];
7 -> 9[label="type"];
9[label="FileType"];
9 -> 10[label="type"];
10[label="StructuredType"];
10 -> 11[label="packed"];
11[label="false"];
10 -> 12[label="type"];
12[label="FileType"];
13[label="t"];
12 -> 13[label="type"];
}
"
`;

exports[`TYPE t = SET OF 1..2 1`] = `
"digraph graph1 {
0[label="Program"];
0 -> 1[label="blocks[0]"];
1[label="TypeBlock"];
1 -> 2[label="defs[0]"];
2[label="TypeDefinition"];
3[label="t"];
2 -> 3[label="ident"];
2 -> 4[label="type"];
4[label="StructuredType"];
4 -> 5[label="packed"];
5[label="false"];
4 -> 6[label="type"];
6[label="SetType"];
6 -> 7[label="base_type"];
7[label="SubrangeType"];
7 -> 8[label="start"];
8[label="UnsignedConstant"];
9[label="1"];
8 -> 9[label="value"];
7 -> 10[label="end"];
10[label="UnsignedConstant"];
11[label="2"];
10 -> 11[label="value"];
}
"
`;

exports[`TYPE t = a (* графический и текстовый дисплеи *) 1`] = `
"digraph graph1 {
0[label="Program"];
0 -> 1[label="blocks[0]"];
1[label="TypeBlock"];
1 -> 2[label="defs[0]"];
2[label="TypeDefinition"];
3[label="t"];
2 -> 3[label="ident"];
4[label="a"];
2 -> 4[label="type"];
}
"
`;

exports[`a 123 (*323*()(

)*) 1e15 1`] = `"IDENTIFIER (1,1): a"`;

exports[`a 123 (*323*()(

)*) 1e15 2`] = `"UNSIGNED_NUMBER (1,3): 123"`;

exports[`a 123 (*323*()(

)*) 1e15 3`] = `"UNSIGNED_NUMBER (1,22): 1e15"`;

exports[`a 123 (*323*()()*) 1e15 1`] = `"IDENTIFIER (1,1): a"`;

exports[`a 123 (*323*()()*) 1e15 2`] = `"UNSIGNED_NUMBER (1,3): 123"`;

exports[`a 123 (*323*()()*) 1e15 3`] = `"UNSIGNED_NUMBER (1,20): 1e15"`;

exports[`a 123 {232 * 3\\

} 1e15 1`] = `"IDENTIFIER (1,1): a"`;

exports[`a 123 {232 * 3\\

} 1e15 2`] = `"UNSIGNED_NUMBER (1,3): 123"`;

exports[`a 123 {232 * 3\\

} 1e15 3`] = `"UNSIGNED_NUMBER (1,20): 1e15"`;

exports[`Идентификатор распознается 1`] = `"IDENTIFIER (1,1): testCounter1"`;

exports[`Именованные специальные значения распознаются корректно 1`] = `"LPAREN (1,1): ("`;

exports[`Именованные специальные значения распознаются корректно 2`] = `"RPAREN (1,3): )"`;

exports[`Именованные специальные значения распознаются корректно 3`] = `"COMMA (1,5): ,"`;

exports[`Именованные специальные значения распознаются корректно 4`] = `"POINTS (1,7): .."`;

exports[`Именованные специальные значения распознаются корректно 5`] = `"CARET (1,10): ^"`;

exports[`Именованные специальные значения распознаются корректно 6`] = `"PLUS (1,12): +"`;

exports[`Именованные специальные значения распознаются корректно 7`] = `"MINUS (1,14): -"`;

exports[`Именованные специальные значения распознаются корректно 8`] = `"LBRACKET (1,16): ["`;

exports[`Именованные специальные значения распознаются корректно 9`] = `"RBRACKET (1,18): ]"`;

exports[`Именованные специальные значения распознаются корректно 10`] = `"EQUAL (1,20): ="`;

exports[`Именованные специальные значения распознаются корректно 11`] = `"COLON (1,22): :"`;

exports[`Именованные специальные значения распознаются корректно 12`] = `"SEMICOLON (1,24): ;"`;

exports[`Конец строки распознается 1`] = `"EOF (-1,-1): "`;

exports[`Распознается самая длинная лексема 1`] = `"IDENTIFIER (1,1): VARCHAR"`;

exports[`Столбцы считаются корректно 1`] = `"UNSIGNED_NUMBER (1,3): 1234"`;

exports[`Строки распознаются 1`] = `"STRING (1,1): 'adsas'"`;

exports[`Строки распознаются 2`] = `"STRING (1,9): 'hello world!'"`;

exports[`Строки считаются после \\n корректно 1`] = `"UNSIGNED_NUMBER (4,5): 1234"`;

exports[`Строки считаются после \\r\\n корректно 1`] = `"UNSIGNED_NUMBER (2,1): 1234"`;

exports[`Управляющие символы в строках не распознаются 1`] = `"ERROR (1,1): "`;

exports[`Управляющие символы в строках не распознаются 2`] = `"IDENTIFIER (2,1): sdfsd"`;

exports[`Управляющие символы в строках не распознаются 3`] = `"ERROR (2,6): "`;

exports[`Целые беззнаковые числа распознаются 1`] = `"UNSIGNED_NUMBER (1,1): 011010"`;

exports[`Целые беззнаковые числа распознаются 2`] = `"UNSIGNED_NUMBER (1,8): 123"`;

exports[`Целые беззнаковые числа распознаются 3`] = `"UNSIGNED_NUMBER (1,12): 456"`;

exports[`Целые беззнаковые числа распознаются 4`] = `"UNSIGNED_NUMBER (1,16): 1"`;

exports[`Целые беззнаковые числа распознаются 5`] = `"UNSIGNED_NUMBER (1,18): 0"`;

exports[`Числа с плавающей точкой распознаются 1`] = `"UNSIGNED_NUMBER (1,1): 1E+11"`;

exports[`Числа с плавающей точкой распознаются 2`] = `"UNSIGNED_NUMBER (1,7): 42E-11"`;

exports[`Числа с плавающей точкой распознаются 3`] = `"UNSIGNED_NUMBER (1,14): 42E11"`;

exports[`Числа с плавающей точкой распознаются 4`] = `"UNSIGNED_NUMBER (1,20): 42.11E+11"`;

exports[`Числа с плавающей точкой распознаются 5`] = `"UNSIGNED_NUMBER (1,30): 42.11E-11"`;

exports[`Числа с плавающей точкой распознаются 6`] = `"UNSIGNED_NUMBER (1,40): 42.11E11"`;
